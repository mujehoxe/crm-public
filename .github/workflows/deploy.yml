name: Deploy Next.js App
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      MONGO_URL: ${{ secrets.MONGO_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          mongo_url: ${{ secrets.mongo_url }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Deploy with rsync
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --delete --existing -v .next/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/nextjs-app/.next/
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --existing -v package.json package-lock.json next.config.js ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/nextjs-app/
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --existing -v public/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/nextjs-app/public/

      - name: Setup and run application
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ~/nextjs-app &&
            echo 'MONGO_URL=${{ secrets.MONGO_URL }}' > .env &&
            echo 'JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}' >> .env &&
            npm install -g pm2 &&
            npm ci --omit=dev &&
            pm2 restart nextjs-app || pm2 start 'npx next start' --name nextjs-app
          "
